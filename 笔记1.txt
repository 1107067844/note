1.单一职责原则。
概念：对功能进行分类，代码进行解耦。
2.里氏替换原则。
概念：在继承类时，出了扩展一些新的功能外，尽量不要修改或删除父类方法的引用，也尽量不要重载父类方法。
3.依赖倒置原则。
概念：高层模块不依赖低层次模块的细节，高层次不依赖细节而是依赖抽象。
4.接口隔离原则。
概念：在定义接口方法时应该合理化，尽量追求简单最小，避免接口臃肿。
5.迪米特原则。
概念：一个对象应该对其他对象有最少的了解；一个类应该对自己需要耦合或调用的类知道的最少。
6.开闭原则。
概念：类，模块和函数应该对扩展开放，对修改关闭。

单一职责原则告诉我们实现类要职责单一。
里氏替换原则告诉我们不要破坏继承体系。
依赖倒置原则告诉我们要面向接口编程。
接口隔离原则告诉我们在涉及接口时要精简单一。
迪米特原则告诉我们要降低耦合。
开闭原则是总纲，高数我们要对扩展开放，对修改关闭。
